// Mocks generated by Mockito 5.4.6 from annotations
// in independent/test/features/shared/checkout/checkout_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:independent/features/shared/checkout/domain/entities/checkout_entities.dart'
    as _i2;
import 'package:independent/features/shared/checkout/domain/repositories/checkout_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePaymentMethodEntity_0 extends _i1.SmartFake
    implements _i2.PaymentMethodEntity {
  _FakePaymentMethodEntity_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeCheckoutStateEntity_1 extends _i1.SmartFake
    implements _i2.CheckoutStateEntity {
  _FakeCheckoutStateEntity_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeCheckoutResultEntity_2 extends _i1.SmartFake
    implements _i2.CheckoutResultEntity {
  _FakeCheckoutResultEntity_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [CheckoutRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCheckoutRepository extends _i1.Mock
    implements _i3.CheckoutRepository {
  MockCheckoutRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.PickupLocationEntity>> getPickupLocations({
    String? brandId,
    String? locationId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getPickupLocations, [], {
              #brandId: brandId,
              #locationId: locationId,
            }),
            returnValue: _i4.Future<List<_i2.PickupLocationEntity>>.value(
              <_i2.PickupLocationEntity>[],
            ),
          )
          as _i4.Future<List<_i2.PickupLocationEntity>>);

  @override
  _i4.Future<_i2.PickupLocationEntity?> getPickupLocationById(
    String? locationId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getPickupLocationById, [locationId]),
            returnValue: _i4.Future<_i2.PickupLocationEntity?>.value(),
          )
          as _i4.Future<_i2.PickupLocationEntity?>);

  @override
  _i4.Future<List<_i2.PaymentMethodEntity>> getPaymentMethods() =>
      (super.noSuchMethod(
            Invocation.method(#getPaymentMethods, []),
            returnValue: _i4.Future<List<_i2.PaymentMethodEntity>>.value(
              <_i2.PaymentMethodEntity>[],
            ),
          )
          as _i4.Future<List<_i2.PaymentMethodEntity>>);

  @override
  _i4.Future<_i2.PaymentMethodEntity> addPaymentMethod({
    required _i2.PaymentMethodType? type,
    required Map<String, dynamic>? securePaymentData,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#addPaymentMethod, [], {
              #type: type,
              #securePaymentData: securePaymentData,
            }),
            returnValue: _i4.Future<_i2.PaymentMethodEntity>.value(
              _FakePaymentMethodEntity_0(
                this,
                Invocation.method(#addPaymentMethod, [], {
                  #type: type,
                  #securePaymentData: securePaymentData,
                }),
              ),
            ),
          )
          as _i4.Future<_i2.PaymentMethodEntity>);

  @override
  _i4.Future<bool> removePaymentMethod(String? paymentMethodId) =>
      (super.noSuchMethod(
            Invocation.method(#removePaymentMethod, [paymentMethodId]),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<bool> setDefaultPaymentMethod(String? paymentMethodId) =>
      (super.noSuchMethod(
            Invocation.method(#setDefaultPaymentMethod, [paymentMethodId]),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<_i2.CheckoutStateEntity> createCheckout({
    required double? subtotal,
    required double? tax,
    required double? total,
    String? currency = 'SAR',
    Map<String, dynamic>? metadata,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createCheckout, [], {
              #subtotal: subtotal,
              #tax: tax,
              #total: total,
              #currency: currency,
              #metadata: metadata,
            }),
            returnValue: _i4.Future<_i2.CheckoutStateEntity>.value(
              _FakeCheckoutStateEntity_1(
                this,
                Invocation.method(#createCheckout, [], {
                  #subtotal: subtotal,
                  #tax: tax,
                  #total: total,
                  #currency: currency,
                  #metadata: metadata,
                }),
              ),
            ),
          )
          as _i4.Future<_i2.CheckoutStateEntity>);

  @override
  _i4.Future<_i2.CheckoutStateEntity> updatePickupDetails(
    String? checkoutId,
    _i2.PickupDetailsEntity? pickupDetails,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updatePickupDetails, [
              checkoutId,
              pickupDetails,
            ]),
            returnValue: _i4.Future<_i2.CheckoutStateEntity>.value(
              _FakeCheckoutStateEntity_1(
                this,
                Invocation.method(#updatePickupDetails, [
                  checkoutId,
                  pickupDetails,
                ]),
              ),
            ),
          )
          as _i4.Future<_i2.CheckoutStateEntity>);

  @override
  _i4.Future<_i2.CheckoutStateEntity> updatePaymentMethod(
    String? checkoutId,
    String? paymentMethodId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updatePaymentMethod, [
              checkoutId,
              paymentMethodId,
            ]),
            returnValue: _i4.Future<_i2.CheckoutStateEntity>.value(
              _FakeCheckoutStateEntity_1(
                this,
                Invocation.method(#updatePaymentMethod, [
                  checkoutId,
                  paymentMethodId,
                ]),
              ),
            ),
          )
          as _i4.Future<_i2.CheckoutStateEntity>);

  @override
  _i4.Future<_i2.CheckoutResultEntity> processPayment(String? checkoutId) =>
      (super.noSuchMethod(
            Invocation.method(#processPayment, [checkoutId]),
            returnValue: _i4.Future<_i2.CheckoutResultEntity>.value(
              _FakeCheckoutResultEntity_2(
                this,
                Invocation.method(#processPayment, [checkoutId]),
              ),
            ),
          )
          as _i4.Future<_i2.CheckoutResultEntity>);

  @override
  _i4.Future<_i2.CheckoutStateEntity?> getCheckout(String? checkoutId) =>
      (super.noSuchMethod(
            Invocation.method(#getCheckout, [checkoutId]),
            returnValue: _i4.Future<_i2.CheckoutStateEntity?>.value(),
          )
          as _i4.Future<_i2.CheckoutStateEntity?>);

  @override
  _i4.Future<bool> cancelCheckout(String? checkoutId) =>
      (super.noSuchMethod(
            Invocation.method(#cancelCheckout, [checkoutId]),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<List<_i2.CheckoutStateEntity>> getCheckoutHistory({
    int? limit = 20,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getCheckoutHistory, [], {
              #limit: limit,
              #offset: offset,
            }),
            returnValue: _i4.Future<List<_i2.CheckoutStateEntity>>.value(
              <_i2.CheckoutStateEntity>[],
            ),
          )
          as _i4.Future<List<_i2.CheckoutStateEntity>>);

  @override
  _i4.Future<bool> validatePickupTimeSlot(
    String? locationId,
    DateTime? pickupTime,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#validatePickupTimeSlot, [
              locationId,
              pickupTime,
            ]),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<Map<String, double>> calculateFees({
    required String? locationId,
    required _i2.PickupTimeType? pickupType,
    DateTime? scheduledTime,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#calculateFees, [], {
              #locationId: locationId,
              #pickupType: pickupType,
              #scheduledTime: scheduledTime,
            }),
            returnValue: _i4.Future<Map<String, double>>.value(
              <String, double>{},
            ),
          )
          as _i4.Future<Map<String, double>>);

  @override
  _i4.Future<bool> verifyPaymentMethod(String? paymentMethodId) =>
      (super.noSuchMethod(
            Invocation.method(#verifyPaymentMethod, [paymentMethodId]),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<Map<String, dynamic>> authenticatePayment({
    required String? checkoutId,
    required String? paymentMethodId,
    Map<String, dynamic>? authData,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#authenticatePayment, [], {
              #checkoutId: checkoutId,
              #paymentMethodId: paymentMethodId,
              #authData: authData,
            }),
            returnValue: _i4.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i4.Future<Map<String, dynamic>>);

  @override
  _i4.Future<void> cacheCheckoutLocally(_i2.CheckoutStateEntity? checkout) =>
      (super.noSuchMethod(
            Invocation.method(#cacheCheckoutLocally, [checkout]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> clearCheckoutCache() =>
      (super.noSuchMethod(
            Invocation.method(#clearCheckoutCache, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}
